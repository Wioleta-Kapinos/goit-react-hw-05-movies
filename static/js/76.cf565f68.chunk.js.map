{"version":3,"file":"static/js/76.cf565f68.chunk.js","mappings":"6PACA,EAA0B,sBAA1B,EAA8D,0BAA9D,EAAgG,oB,SCwDhG,EAnDa,WACT,OAAwBA,EAAAA,EAAAA,YAAxB,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkCH,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KACA,GAA0BN,EAAAA,EAAAA,WAAS,GAAnC,eAAOO,EAAP,KAAcC,EAAd,KAEMC,EAAa,mCAAG,WAAOC,GAAP,8EAClBJ,GAAa,GADK,mBAGaK,EAAAA,EAAAA,IAAQD,GAHrB,OAGRE,EAHQ,OAIdV,EAAQU,EAAaC,KAAKZ,MAC1BK,GAAa,GALC,gDAOlBE,GAAS,GACTF,GAAa,GARK,yDAAH,sDAgBnB,OAJAQ,EAAAA,EAAAA,YAAU,WACRL,EAAcN,EACf,GAAE,CAACA,KAGA,2BACKE,IAAa,SAACU,EAAA,EAAD,KACd,gBAAIC,UAAWC,EAAf,UACCV,IAAS,cAAGS,UAAWC,EAAd,qDACThB,GAAQA,EAAKiB,QAChB,8BACGjB,EAAKkB,KACJ,gBAAGT,EAAH,EAAGA,GAAIU,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,cAAeC,EAApC,EAAoCA,KAAMC,EAA1C,EAA0CA,UAA1C,OACE,2BACE,gBACEC,IAAKJ,EAAY,8CAA0CA,IAAiB,mDAC5EK,IAAKJ,EACLK,MAAO,OAET,wBAAKJ,KACL,eAAGN,UAAWC,EAAd,wBAA2CM,OAPpCb,EADX,OAcA,iEAKb,C,4ECrDYK,EAAS,WAClB,OACI,0BACI,SAAC,KAAD,CACIY,YAAY,QACZC,YAAY,IACZC,kBAAkB,OAClBH,MAAM,KACNI,SAAS,KAIxB,C,+LCZKC,EAAM,mCACZC,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAiB,mCAAG,oGACID,EAAAA,EAAAA,IAAA,sCAAyCD,IAD7C,cAChBG,EADgB,yBAEfA,GAFe,2CAAH,qDAKjBC,EAAiB,mCAAG,WAAOzB,GAAP,uFACCsB,EAAAA,EAAAA,IAAA,gBAAmBtB,EAAnB,oBAAiCqB,IADlC,cAChBK,EADgB,yBAEfA,GAFe,2CAAH,sDAKjBC,EAAW,mCAAG,WAAOC,GAAP,uFACUN,EAAAA,EAAAA,IAAA,+BAAkCD,EAAlC,kBAA+CO,IADzD,cACVC,EADU,yBAETA,GAFS,2CAAH,sDAKXC,EAAU,mCAAG,WAAO9B,GAAP,4FAAW+B,EAAX,+BAAkB,EAAlB,SACMT,EAAAA,EAAAA,IAAA,gBAAmBtB,EAAnB,4BAAyCqB,EAAzC,iBAAqDU,IAD3D,cACTC,EADS,yBAERA,GAFQ,2CAAH,sDAKV/B,EAAO,mCAAG,WAAOD,GAAP,uFACOsB,EAAAA,EAAAA,IAAA,gBAAoBtB,EAApB,4BAA0CqB,IADjD,cACN9B,EADM,yBAELA,GAFK,2CAAH,qD","sources":["webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","components/Loader/Loader.jsx","utils/API.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castBox\":\"Cast_castBox__KVoEk\",\"description\":\"Cast_description__uN0VA\",\"error\":\"Cast_error__hQWWB\"};","import { getCast } from \"utils/API\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Loader } from \"components/Loader/Loader\";\nimport css from \"./Cast.module.css\";\n\nconst Cast = () => {\n    const [cast, setCast] = useState();\n    const { movieId } = useParams();\n    const [isLoading, setIsloading] = useState(false);\n    const [error, setError] = useState(false);\n\n    const infoAboutCast = async (id) => {\n        setIsloading(true);\n        try {\n            const responseCast = await getCast(id);\n            setCast(responseCast.data.cast);\n            setIsloading(false);\n    } catch {\n        setError(true);\n        setIsloading(false);\n    }\n  }\n\n    useEffect(() => {\n      infoAboutCast(movieId);\n    }, [movieId]);\n\n    return (\n        <div>\n            {isLoading && <Loader />}\n            <ul className={css.castBox}>\n            {error && <p className={css.error}>Something went wrong, please try later.</p>}\n            {cast && cast.length ? (\n          <>\n            {cast.map(\n              ({ id, profile_path, original_name, name, character }) => (\n                <li key={id}>\n                  <img\n                    src={profile_path ? `https://www.themoviedb.org/t/p/w500/${profile_path}` : <p>Image is not available.</p>}\n                    alt={original_name}\n                    width={150}\n                  />\n                  <h4>{name}</h4>\n                  <p className={css.description}>Character: {character}</p>\n                </li>\n              )\n            )}\n          </>\n            ) : (\n              <p>There is no cast for this movie.</p>\n            )}\n            </ul>\n        </div>\n    )\n}\n\nexport default Cast;","import { RotatingLines } from \"react-loader-spinner\";\n\nexport const Loader = () => {\n    return (\n        <div>\n            <RotatingLines\n                strokeColor=\"green\"\n                strokeWidth=\"5\"\n                animationDuration=\"0.85\"\n                width=\"96\"\n                visible={true}\n            />\n        </div>\n    )\n}","import axios from \"axios\";\n\nconst key = \"0ae018dc89a696513a6043d3ec6bfbe3\";\naxios.defaults.baseURL = \"https://api.themoviedb.org/3/\";\n\nconst getTrendingMovies = async () => {\n    const trendMovies = await axios.get(`trending/movie/week?api_key=${key}`);\n    return trendMovies;\n}\n\nconst getInfoAboutMovie = async (id) => {\n    const moreInfo = await axios.get(`movie/${id}?api_key=${key}`);\n    return moreInfo;\n}\n\nconst searchMovie = async (query) => {\n    const findedMovie = await axios.get(`search/movie?api_key=${key}&query=${query}`);\n    return findedMovie;\n}\n\nconst getReviews = async (id, page = 1) => {\n    const review = await axios.get(`movie/${id}/reviews?api_key=${key}&page=${page}`);\n    return review;\n}\n\nconst getCast = async (id) => {\n    const cast = await axios.get( `movie/${id}/credits?api_key=${key}`);\n    return cast;\n}\n\nexport {\n    getTrendingMovies,\n    getInfoAboutMovie,\n    searchMovie,\n    getReviews,\n    getCast,\n}"],"names":["useState","cast","setCast","movieId","useParams","isLoading","setIsloading","error","setError","infoAboutCast","id","getCast","responseCast","data","useEffect","Loader","className","css","length","map","profile_path","original_name","name","character","src","alt","width","strokeColor","strokeWidth","animationDuration","visible","key","axios","getTrendingMovies","trendMovies","getInfoAboutMovie","moreInfo","searchMovie","query","findedMovie","getReviews","page","review"],"sourceRoot":""}