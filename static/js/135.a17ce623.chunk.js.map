{"version":3,"file":"static/js/135.a17ce623.chunk.js","mappings":"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","sources":["components/Loader/Loader.jsx","webpack://goit-react-hw-05-movies/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx","utils/API.js"],"sourcesContent":["import { RotatingLines } from \"react-loader-spinner\";\n\nexport const Loader = () => {\n    return (\n        <div>\n            <RotatingLines\n                strokeColor=\"green\"\n                strokeWidth=\"5\"\n                animationDuration=\"0.85\"\n                width=\"96\"\n                visible={true}\n            />\n        </div>\n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"detailsBox\":\"MovieDetails_detailsBox__a1-wd\",\"detailsSection\":\"MovieDetails_detailsSection__YO+VK\",\"movieImage\":\"MovieDetails_movieImage__SFpqg\",\"details\":\"MovieDetails_details__TGlfg\",\"detailsList\":\"MovieDetails_detailsList__c-mmj\",\"informationBox\":\"MovieDetails_informationBox__dAfJL\",\"btn\":\"MovieDetails_btn__7L5IF\",\"btnBox\":\"MovieDetails_btnBox__eE-RH\",\"error\":\"MovieDetails_error__uOHXe\"};","import { Loader } from \"components/Loader/Loader\";\nimport { useEffect, useState } from \"react\";\nimport { Link, useParams, Outlet, useNavigate } from \"react-router-dom\";\nimport { getInfoAboutMovie } from \"utils/API\";\nimport css from \"./MovieDetails.module.css\";\n\nconst MovieDetails = () => {\n   \n    const { movieId} = useParams();\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(false);\n    const [image, setImage] = useState();\n    const [title, setTitle] = useState([]);\n    const [year, setYear] = useState();\n    const [score, setScore] = useState(0);\n    const [overview, setOverview] =useState(\"\");\n    const [genres, setGenres] = useState([]);\n    const navigate = useNavigate();\n\n    const getMoreInformation = async (id) => {\n        setIsLoading(true);\n        try {\n            const movieInfo = await getInfoAboutMovie(id);\n            setTitle(movieInfo.data.title);\n            setYear(new Date(movieInfo.data.release_date).getFullYear());\n            setScore(movieInfo.data.vote_average);\n            setOverview(movieInfo.data.overview);\n            setImage(`https://image.tmdb.org/t/p/w500${movieInfo.data.poster_path}`);\n            setIsLoading(false);\n\n            let arrayGenre = [];\n            movieInfo.data.genres.map(genre => {\n            arrayGenre = [...arrayGenre, genre.name];\n            return setGenres(arrayGenre.join(' * '));\n            });\n        } catch {\n            setError(true);\n            setIsLoading(false);\n        }\n    };   \n\n    useEffect(() => {\n        getMoreInformation(movieId);\n    }, [movieId]);\n\n    return (\n        <div className={css.detailsBox}>\n            <button \n            type=\"button\" \n            className={css.btn}\n            onClick={() => {navigate(-1);\n            }}>&#10229; Go back</button>\n            <section className={css.detailsSection}>\n            {error && <p className={css.error}>Something went wrong, please try later.</p>}\n            {isLoading && <Loader />}\n                <img \n                className={css.movieImage}\n                src={image}\n                alt={title}\n                />\n                <div className={css.details}>\n                    <h3>{title} ({year})</h3>\n                    <ul className={css.detailsList}>\n                        <li>\n                            <p>User score: {Math.round(score * 10)}%</p>\n                        </li>\n                        <li>\n                            <h4>Overview</h4>\n                            <p>{overview}</p>\n                        </li>\n                        <li>\n                            <h4>Genres</h4>\n                            <p>{genres}</p>\n                        </li>\n                    </ul>\n                </div>\n            </section>\n            <div className={css.informationBox}>\n                {isLoading && <Loader />}\n                <h3>Additional information</h3>\n                <div className={css.btnBox}>\n                    <Link to=\"cast\">\n                        <button type=\"button\" className={css.btn}>Cast</button>\n                    </Link>\n                    <Link to=\"reviews\">\n                        <button type=\"button\" className={css.btn}>Reviews</button>\n                    </Link>\n                </div>\n            </div>\n                <Outlet />\n            <div>\n        </div>\n        </div>\n    )\n}\n\nexport default MovieDetails;","import axios from \"axios\";\n\nconst key = \"0ae018dc89a696513a6043d3ec6bfbe3\";\naxios.defaults.baseURL = \"https://api.themoviedb.org/3/\";\n\nconst getTrendingMovies = async () => {\n    const trendMovies = await axios.get(`trending/movie/week?api_key=${key}`);\n    return trendMovies;\n}\n\nconst getInfoAboutMovie = async (id) => {\n    const moreInfo = await axios.get(`movie/${id}?api_key=${key}`);\n    return moreInfo;\n}\n\nconst searchMovie = async (query) => {\n    const findedMovie = await axios.get(`search/movie?api_key=${key}&query=${query}`);\n    return findedMovie;\n}\n\nconst getReviews = async (id, page = 1) => {\n    const review = await axios.get(`movie/${id}/reviews?api_key=${key}&page=${page}`);\n    return review;\n}\n\nconst getCast = async (id) => {\n    const cast = await axios.get( `movie/${id}/credits?api_key=${key}`);\n    return cast;\n}\n\nexport {\n    getTrendingMovies,\n    getInfoAboutMovie,\n    searchMovie,\n    getReviews,\n    getCast,\n}"],"names":["Loader","strokeColor","strokeWidth","animationDuration","width","visible","movieId","useParams","useState","isLoading","setIsLoading","error","setError","image","setImage","title","setTitle","year","setYear","score","setScore","overview","setOverview","genres","setGenres","navigate","useNavigate","getMoreInformation","id","getInfoAboutMovie","movieInfo","data","Date","release_date","getFullYear","vote_average","poster_path","arrayGenre","map","genre","name","join","useEffect","className","css","type","onClick","src","alt","Math","round","to","key","axios","getTrendingMovies","trendMovies","moreInfo","searchMovie","query","findedMovie","getReviews","page","review","getCast","cast"],"sourceRoot":""}